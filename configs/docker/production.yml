# Production Docker Compose Configuration
version: '3.8'

services:
  app:
    build:
      context: ../..
      dockerfile: Dockerfile
      args:
        - PYTHON_VERSION=3.12
        - BUILD_ENV=production
    
    ports:
      - "8000:8000"
    
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - WEB_DEBUG=false
    
    volumes:
      - ../../exports:/app/exports
      - ../../logs:/app/logs
      - ../../.cache:/app/.cache
    
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  # Optional: Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    profiles:
      - cache

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    profiles:
      - proxy

volumes:
  redis_data:

networks:
  default:
    name: document-to-anki-network